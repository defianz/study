

//문제
//RGB거리에는 집이 N개 있다.거리는 선분으로 나타낼 수 있고, 1번 집부터 N번 집이 순서대로 있다.
//
//집은 빨강, 초록, 파랑 중 하나의 색으로 칠해야 한다.각각의 집을 빨강, 초록, 파랑으로 칠하는 비용이 주어졌을 때, 아래 규칙을 만족하면서 모든 집을 칠하는 비용의 최솟값을 구해보자.
//
//1번 집의 색은 2번 집의 색과 같지 않아야 한다.
//N번 집의 색은 N - 1번 집의 색과 같지 않아야 한다.
//i(2 ≤ i ≤ N - 1)번 집의 색은 i - 1번, i + 1번 집의 색과 같지 않아야 한다.
//입력
//첫째 줄에 집의 수 N(2 ≤ N ≤ 1, 000)이 주어진다.둘째 줄부터 N개의 줄에는 각 집을 빨강, 초록, 파랑으로 칠하는 비용이 1번 집부터 한 줄에 하나씩 주어진다.집을 칠하는 비용은 1, 000보다 작거나 같은 자연수이다.
//
//출력
//첫째 줄에 모든 집을 칠하는 비용의 최솟값을 출력한다.

#include <stdio.h>

int min(int a, int b){
	if (a <= b) return a;
	else return b;
}

int main(){
	int n;
	int arr[1001][3] = { 0, };
	int bp[1001][3] = { 0, };

	scanf("%d", &n);
	
	for (int i = 1; i <= n; i++){
		for (int j = 0; j < 3; j++) scanf("%d", &arr[i][j]);
	}

	for (int i = 0; i < 3; i++){
		bp[1][i] = arr[1][i];
	}

	for (int i = 2; i <= n; i++){
		bp[i][0] = min(bp[i-1][1], bp[i-1][2]) + arr[i][0];
		bp[i][1] = min(bp[i-1][0], bp[i-1][2]) + arr[i][1];
		bp[i][2] = min(bp[i-1][0], bp[i-1][1]) + arr[i][2];
	}

	printf("%d", min(min(bp[n][0], bp[n][1]), bp[n][2]));

	return 0;
}