{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Git_defian\\\\study\\\\React\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTowTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport { useCallback, useState } from 'react';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // ?. 옵셔널 체이닝 : 없으면 undeined\n\n  var onToggleLike = useCallback(function () {}, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTowTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 27\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 41\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 41\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(PostCard, \"gYUVDyGDSdXv5dLj+x7/4XGjvec=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Git_defian/study/React/react-nodebird/prepare/front/components/PostCard.js"],"names":["PropTypes","useSelector","Card","Popover","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTowTone","PostImages","useCallback","useState","PostCard","post","liked","setLiked","id","state","user","me","onToggleLike","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card, Popover, Button, Avatar } from 'antd';\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTowTone } from '@ant-design/icons';\r\n\r\nimport PostImages from './PostImages';\r\nimport { useCallback, useState } from 'react';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    // ?. 옵셔널 체이닝 : 없으면 undeined\r\n\r\n    const onToggleLike = useCallback(() => {\r\n\r\n    }, []);\r\n    return (\r\n        <div style={{ marginBottom: 20 }}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked\r\n                        ? <HeartTowTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n\r\n                    <MessageOutlined key=\"comment\" />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id\r\n                                ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type=\"danger\">삭제</Button>\r\n                                    </>\r\n                                ) : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )} >\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n                {/* <Image /> */}\r\n                {/* <Content /> */}\r\n                {/* <Buttons></Buttons> */}\r\n            </Card>\r\n            {/* <CommentForm /> */}\r\n            {/* <Comments /> */}\r\n        </div >\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}