{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git_defian\\\\study\\\\React\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\ImagesZoom\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\nconst Overlay = styled.div`\n    position:fixed;\n    z-index: 5000;\n    top:0;\n    left:0;\n    right:0;\n    bottom:0;\n`; //`` 로 함수를 호출 가능 styled.div() 호출한거임\n\nconst Header = styled.header`\n    header:44px;\n    background: white;\n    position: relative;\n    padding: 0;\n    text-align:center;\n\n    & h1 {\n        margin:0;\n        font-size:17px;\n        color:#333;\n        line-height:44px;\n    }\n`;\nconst CloseBtn = styled(CloseOutlined)`\n    position: absoulte;\n    right: 0;\n    top:0;\n    padding:15px;\n    line-height:14px;\n    cursor:pointer;\n`;\nconst SlickWrapper = styled.div`\n    height:calc(100%-44px);\n    background:#090909;\n`;\nconst ImgWrapper = styled.div`\n    padding: 32px;\n    text-align:center;\n\n    & img {\n        margin: 0 auto;\n        max-height: 750px;\n    }\n`;\nconst Indicator = styled.div`\n    text-align:center;\n\n    & > div {\n        width:75px;\n        height:30px;\n        line-height:30px;\n        border-radius: 15px;\n        background: #313131;\n        display: inline-block;\n        text-align: center;\n        color: white;\n        font-size: 15px;\n    }\n`;\nconst Global = createGlobalStyle`\n    .slick-slide {\n        display: inline-block;\n    }\n`;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  return __jsx(React.Fragment, null, __jsx(Overlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(CloseBtn, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"X\")), __jsx(SlickWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0,\n    afterChange: slide => setCurrentSlide(slide),\n    infinite: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, images.map(v => __jsx(ImgWrapper, {\n    key: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    src: v.src,\n    alt: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  })))), __jsx(Indicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, currentSlide + 1, ' ', \"/\", images.length))))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Git_defian/study/React/react-nodebird/prepare/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","styled","createGlobalStyle","CloseOutlined","Overlay","div","Header","header","CloseBtn","SlickWrapper","ImgWrapper","Indicator","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","length","propTypes","arrayOf","object","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;;;;;;;CAA3B,C,CAQA;;AAEA,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAO;;;;;;;;;;;;;CAA7B;AAeA,MAAMC,QAAQ,GAAGP,MAAM,CAACE,aAAD,CAAgB;;;;;;;CAAvC;AASA,MAAMM,YAAY,GAAGR,MAAM,CAACI,GAAI;;;CAAhC;AAKA,MAAMK,UAAU,GAAGT,MAAM,CAACI,GAAI;;;;;;;;CAA9B;AAUA,MAAMM,SAAS,GAAGV,MAAM,CAACI,GAAI;;;;;;;;;;;;;;CAA7B;AAgBA,MAAMO,MAAM,GAAGV,iBAAkB;;;;CAAjC;;AAMA,MAAMW,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AACxC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCnB,QAAQ,CAAC,CAAD,CAAhD;AAEA,SACI,4BACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEiB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CAFJ,EAMI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AACI,IAAA,YAAY,EAAE,CADlB;AAEI,IAAA,WAAW,EAAGG,KAAD,IAAWD,eAAe,CAACC,KAAD,CAF3C;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,MAAM,EAAE,KAJZ;AAKI,IAAA,YAAY,EAAE,CALlB;AAMI,IAAA,cAAc,EAAE,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKJ,MAAM,CAACK,GAAP,CAAYC,CAAD,IACR,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,CAAC,CAACC,GAAZ;AAAiB,IAAA,GAAG,EAAED,CAAC,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CARL,CADJ,EAeI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,YAAY,GAAG,CADpB,EAEK,GAFL,OAIKF,MAAM,CAACQ,MAJZ,CADJ,CAfJ,CADJ,CANJ,CADJ,CADJ;AAqCH,CAxCD;;AA0CAT,UAAU,CAACU,SAAX,GAAuB;AACnBT,EAAAA,MAAM,EAAEf,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,MAA5B,EAAoCC,UADzB;AAEnBX,EAAAA,OAAO,EAAEhB,SAAS,CAAC4B,IAAV,CAAeD;AAFL,CAAvB;AAKA,eAAeb,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slick from 'react-slick';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nconst Overlay = styled.div`\r\n    position:fixed;\r\n    z-index: 5000;\r\n    top:0;\r\n    left:0;\r\n    right:0;\r\n    bottom:0;\r\n`;\r\n//`` 로 함수를 호출 가능 styled.div() 호출한거임\r\n\r\nconst Header = styled.header`\r\n    header:44px;\r\n    background: white;\r\n    position: relative;\r\n    padding: 0;\r\n    text-align:center;\r\n\r\n    & h1 {\r\n        margin:0;\r\n        font-size:17px;\r\n        color:#333;\r\n        line-height:44px;\r\n    }\r\n`;\r\n\r\nconst CloseBtn = styled(CloseOutlined)`\r\n    position: absoulte;\r\n    right: 0;\r\n    top:0;\r\n    padding:15px;\r\n    line-height:14px;\r\n    cursor:pointer;\r\n`\r\n\r\nconst SlickWrapper = styled.div`\r\n    height:calc(100%-44px);\r\n    background:#090909;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n    padding: 32px;\r\n    text-align:center;\r\n\r\n    & img {\r\n        margin: 0 auto;\r\n        max-height: 750px;\r\n    }\r\n`;\r\n\r\nconst Indicator = styled.div`\r\n    text-align:center;\r\n\r\n    & > div {\r\n        width:75px;\r\n        height:30px;\r\n        line-height:30px;\r\n        border-radius: 15px;\r\n        background: #313131;\r\n        display: inline-block;\r\n        text-align: center;\r\n        color: white;\r\n        font-size: 15px;\r\n    }\r\n`;\r\n\r\nconst Global = createGlobalStyle`\r\n    .slick-slide {\r\n        display: inline-block;\r\n    }\r\n`;\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            <Overlay>\r\n                <Global />\r\n                <Header>\r\n                    <h1>상세 이미지</h1>\r\n                    <CloseBtn onClick={onClose}>X</CloseBtn>\r\n                </Header>\r\n                <SlickWrapper>\r\n                    <div>\r\n                        <Slick\r\n                            initialSlide={0}\r\n                            afterChange={(slide) => setCurrentSlide(slide)}\r\n                            infinite\r\n                            arrows={false}\r\n                            slidesToShow={1}\r\n                            slidesToScroll={1}\r\n                        >\r\n                            {images.map((v) => (\r\n                                <ImgWrapper key={v.src}>\r\n                                    <img src={v.src} alt={v.src} />\r\n                                </ImgWrapper>\r\n                            ))}\r\n                        </Slick>\r\n                        <Indicator>\r\n                            <div>\r\n                                {currentSlide + 1}\r\n                                {' '}\r\n                                /\r\n                                {images.length}\r\n                            </div>\r\n                        </Indicator>\r\n                    </div>\r\n                </SlickWrapper>\r\n            </Overlay>\r\n        </>\r\n    )\r\n}\r\n\r\nImagesZoom.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}