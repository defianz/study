{"ast":null,"code":"const {\n  createWrapper\n} = require('next-redux-wrapper');\n\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevtools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevtools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogiboogi'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Git_defian/study/React/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","require","applyMiddleware","createStore","compose","composeWithDevtools","reducer","configureStore","middlewares","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,oBAAD,CAAjC;;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACXL,OAAO,CAACF,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADI,GAEXH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFzB;AAGA,QAAME,KAAK,GAAGP,WAAW,CAACG,OAAD,EAAUG,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAE,iBADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAf;AAIA,SAAOH,KAAP;AACH,CAXD;;AAcA,MAAMI,OAAO,GAAGd,aAAa,CAACO,cAAD,EAAiB;AAC1CQ,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["const { createWrapper } = require('next-redux-wrapper');\r\nimport { applyMiddleware, createStore, compose } from 'redux'\r\nimport { composeWithDevtools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevtools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer, enhancer);\r\n    store.dispatch({\r\n        type: 'CHANGE_NICKNAME',\r\n        data: 'boogiboogi',\r\n    })\r\n    return store;\r\n};\r\n\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}