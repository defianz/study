{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Git_defian\\\\study\\\\React\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport PropType from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport useInput from '../hooks/useinput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"YN9Lx9SYsM9ELo5m3lcnhMeywnU=\", true, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropType.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Git_defian/study/React/react-nodebird/prepare/front/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","PropType","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","useDispatch","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;AAEA,MAAMC,EAAE,GAAGP,WAAW,CAAC,UAACQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AAH8B,kBAIaN,QAAQ,CAAC,EAAD,CAJrB;AAAA;AAAA,MAIvBU,WAJuB;AAAA,MAIVC,mBAJU;;AAK9B,MAAMC,eAAe,GAAGf,WAAW,CAAC,YAAM;AACtCgB,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACG,EAAjB,EAAqBI,WAArB;AACAN,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEd,mBADD;AAELe,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEP,WAAX;AAAwBQ,QAAAA,MAAM,EAAEf,IAAI,CAACG,EAArC;AAAyCa,QAAAA,MAAM,EAAEb;AAAjD;AAFD,KAAD,CAAR;AAIH,GANkC,EAMhC,CAACI,WAAD,EAAcJ,EAAd,CANgC,CAAnC;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEX,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAQH,CApBD;;GAAMT,W;UAGSH,W,EACgCC,Q;;;KAJzCE,W;AAsBNA,WAAW,CAACoB,SAAZ,GAAwB;AACpBnB,EAAAA,IAAI,EAAEL,QAAQ,CAACyB,MAAT,CAAgBC;AADF,CAAxB;AAIA,eAAetB,WAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport React, { useCallback } from 'react';\r\nimport PropType from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useinput';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const id = useSelector((state) => state.user.me?.id)\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id },\r\n        })\r\n    }, [commentText, id]);\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropType.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}