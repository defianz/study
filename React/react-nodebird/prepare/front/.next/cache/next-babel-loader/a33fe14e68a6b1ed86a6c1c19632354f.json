{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git_defian\\\\study\\\\React\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport PropType from 'prop-types';\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropType.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Git_defian/study/React/react-nodebird/prepare/front/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","PropType","CommentForm","post","commentText","onChangeCommentText","useInput","onSubmitComment","console","log","id","propTypes","object","isRequired"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCC,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMC,eAAe,GAAGP,WAAW,CAAC,MAAM;AACtCQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,EAAjB,EAAqBN,WAArB;AACH,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAGA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEG,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEH,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAQH,CAbD;;AAeAH,WAAW,CAACS,SAAZ,GAAwB;AACpBR,EAAAA,IAAI,EAAEF,QAAQ,CAACW,MAAT,CAAgBC;AADF,CAAxB;AAIA,eAAeX,WAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport React, { useCallback } from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n    }, [commentText]);\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropType.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}