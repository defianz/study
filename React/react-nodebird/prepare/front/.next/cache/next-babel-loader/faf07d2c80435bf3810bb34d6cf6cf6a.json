{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nvar initialState = {\n  user: {},\n  post: {}\n}; // action creator\n// const changeNickname = (data) => {\n//     return {\n//         type : 'CHANGE_NICKNAME',\n//         data,\n//     }\n// }\n// changeNickname('neue zeal');\n// (이전상태, 액션 ) => 다음상태\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      console.log(HYDRATE);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Git_defian/study/React/react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","reducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACA,6CAAYK,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AAEJ;AACI,aAAOL,KAAP;AANR;AAQH,CATD;;AAWA,eAAeD,OAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\n\r\nconst initialState = {\r\n    user: {\r\n\r\n    },\r\n    post: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n// action creator\r\n// const changeNickname = (data) => {\r\n//     return {\r\n//         type : 'CHANGE_NICKNAME',\r\n//         data,\r\n//     }\r\n// }\r\n// changeNickname('neue zeal');\r\n\r\n// (이전상태, 액션 ) => 다음상태\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            console.log(HYDRATE);\r\n            return { ...state, ...action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}